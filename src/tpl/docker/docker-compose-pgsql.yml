services:
  db:
    image: postgres:${KEA__BACKEND__OPTS__VERSION}
    restart: unless-stopped
    volumes:
      - ${SERVICE__PATHS__DB__DATA}:/var/lib/postgresql/data
    networks:
      - db0
    environment:
      - POSTGRES_DB=${KEA__BACKEND__OPTS__NAME}
      - POSTGRES_USER=${KEA__BACKEND__OPTS__USERNAME}
      - POSTGRES_PASSWORD=${KEA__BACKEND__OPTS__PASSWORD}
  kea:
    image: ${IMAGE__REPOSITORY__URL}/${IMAGE__REPOSITORY__NAME}:${IMAGE__REPOSITORY__TAG}
    restart: unless-stopped
    depends_on: [ db ]
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: true
    volumes:
      - ${SERVICE__PATHS__KHA__ROOT}:${SERVICE__PATHS__KHA__ROOT}
      - ${SERVICE__PATHS__KEA__CONFIG}:/etc/kea
      - ${SERVICE__PATHS__KEA__LIB}:/var/lib/kea
      - ${SERVICE__PATHS__KEA__LOG}:/var/log/kea
      - ${SERVICE__PATHS__KEA__RUN}:/var/run/kea
      - ${SERVICE__PATHS__KEA__TMP}:/var/tmp/kea
      - ${SERVICE__PATHS__SUPERVISOR__LOG}:/var/log/supervisor
      - ${SERVICE__PATHS__KHA__ROOT}/deploy/tpl:${IMAGE__PATHS__SHARE}/tpl
    networks:
      db0:
      mgmt0:
        ipv4_address: ${SERVICE__NETWORKING__MGMT__IPV4__ADDRESS}
      subdhcp0:
        ipv4_address: ${SERVICE__NETWORKING__SERVICE__IPV4__ADDRESS}
    ports:
      - ${SERVICE__PORTS__TCP__HTTP}:${SERVICE__PORTS__TCP__HTTP}
    env_file:
      - build/docker/.env
networks:
  db0:
    name: db0
    driver: bridge
  mgmt0:
    name: mgmt0
    driver: ipvlan
    driver_opts:
      ipvlan_mode: l2
      parent: ${SERVICE__NETWORKING__MGMT__INTERFACE}
    ipam:
      driver: default
      config:
          - subnet: "${SERVICE__NETWORKING__MGMT__IPV4__ADDRESS}/${SERVICE__NETWORKING__MGMT__IPV4__NETMASK"
            gateway: "${SERVICE__NETWORKING__MGMT__IPV4__GATEWAY}"
  subdhcp0:
    name: subdhcp0
    driver: ipvlan
    driver_opts:
      ipvlan_mode: l2
      parent: ${SERVICE__NETWORKING__SERVICE__INTERFACE}
    ipam:
      driver: default
      config:
          - subnet: "${SERVICE__NETWORKING__SERVICE__IPV4__ADDRESS}/${SERVICE__NETWORKING__SERVICE__IPV4__NETMASK}"
            gateway: "${SERVICE__NETWORKING__SERVICE__IPV4__GATEWAY}"